# -*- coding: utf-8 -*-
"""
The file auto generated by tool genapi, Do not modify.
"""

import json
import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

class RoleCreateRequest:
	"""
	角色创建
	"""
	def __init__(self) -> None:
		self._role_name = ""  # 角色名称
		self._role_name_u = 0  # 角色名称设置标识
		self._password = ""  # 密码
		self._password_u = 0  # 密码设置标识
		pass


	# 角色名称
	def set_role_name(self, role_name):
		self._role_name = role_name
		self._role_name_u = 1


	@property
	def is_set_role_name(self):
		return self._role_name_u != 0


	@property
	def role_name(self):
		return self._role_name


	# 密码
	def set_password(self, password):
		self._password = password
		self._password_u = 1


	@property
	def is_set_password(self):
		return self._password_u != 0


	@property
	def password(self):
		return self._password


	def to_dict(self) -> dict:
		"""
		Convert object to dict and return
		"""
		data_dict = {}
		data_dict["role_name"] = self._role_name  # 角色名称
		data_dict["password"] = self._password  # 密码

		return data_dict


	def to_obj(self, data_dict: dict):
		"""
		Convert dict to object
		"""

		# check params
		if len( data_dict.get("role_name") ) < 1:
			raise Exception("param:role_name error, out of range min:1!")
		if len( data_dict.get("role_name") ) > 32:
			raise Exception("param:role_name error, out of range max:32!")
		if len( data_dict.get("password") ) < 1:
			raise Exception("param:password error, out of range min:1!")
		if len( data_dict.get("password") ) > 32:
			raise Exception("param:password error, out of range max:32!")

		# parse params
		self.set_role_name( data_dict.get("role_name") )  # 角色名称
		self.set_password( data_dict.get("password") )  # 密码


	def to_json(self):
		"""
		Convert object to object
		"""
		return json.dumps( self.to_dict() )