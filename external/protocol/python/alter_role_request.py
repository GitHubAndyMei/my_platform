# -*- coding: utf-8 -*-
"""
The file auto generated by tool genapi, Do not modify.
"""

import json
import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

class AlterRoleRequest:
	"""
	修改用户角色
	"""
	def __init__(self) -> None:
		self._user_account = ""  # 用户名
		self._user_account_u = 0  # 用户名设置标识
		self._role_code = ""  # 修改后的角色代码
		self._role_code_u = 0  # 修改后的角色代码设置标识
		pass


	# 用户名
	def set_user_account(self, user_account):
		self._user_account = user_account
		self._user_account_u = 1


	@property
	def is_set_user_account(self):
		return self._user_account_u != 0


	@property
	def user_account(self):
		return self._user_account


	# 修改后的角色代码
	def set_role_code(self, role_code):
		self._role_code = role_code
		self._role_code_u = 1


	@property
	def is_set_role_code(self):
		return self._role_code_u != 0


	@property
	def role_code(self):
		return self._role_code


	def to_dict(self) -> dict:
		"""
		Convert object to dict and return
		"""
		data_dict = {}
		data_dict["user_account"] = self._user_account  # 用户名
		data_dict["role_code"] = self._role_code  # 修改后的角色代码

		return data_dict


	def to_obj(self, data_dict: dict):
		"""
		Convert dict to object
		"""

		# check params
		if len( data_dict.get("user_account") ) < 1:
			raise Exception("param:user_account error, out of range min:1!")
		if len( data_dict.get("user_account") ) > 32:
			raise Exception("param:user_account error, out of range max:32!")
		if len( data_dict.get("role_code") ) < 1:
			raise Exception("param:role_code error, out of range min:1!")
		if len( data_dict.get("role_code") ) > 32:
			raise Exception("param:role_code error, out of range max:32!")

		# parse params
		self.set_user_account( data_dict.get("user_account") )  # 用户名
		self.set_role_code( data_dict.get("role_code") )  # 修改后的角色代码


	def to_json(self):
		"""
		Convert object to object
		"""
		return json.dumps( self.to_dict() )