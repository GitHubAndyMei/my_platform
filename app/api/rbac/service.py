# -*- coding: utf-8 -*-
"""
The file auto generated by tool genapi, Do not modify.
"""
from common.mydb import mydb
from middleware.decorator import *

from app.model.tbl_user import TblUser
from app.model.tbl_user_role import TblUserRole
from app.model.tbl_role import TblRole
from app.model.tbl_menu import TblMenu
from common.result_code import IS_NOT_ADMIN,ERR_PASSWORD,ERR_USER_EXISTS


from external.protocol.python.alter_role_request import AlterRoleRequest
from external.protocol.python.alter_role_response import AlterRoleResponse
from external.protocol.python.menu_create_request import MenuCreateRequest
from external.protocol.python.menu_create_response import MenuCreateResponse
from external.protocol.python.menu_list_request import MenuListRequest
from external.protocol.python.menu_list_response import MenuListResponse


class RBACService(object):
    """
    权限服务
    """

    @classmethod
    @login_require
    def alter_role(cls, request: AlterRoleRequest, response: AlterRoleResponse):
        """
        修改用户角色
        """
        # 获取当前登录用户的角色，判断是否是管理员，非管理员不能修改角色，当前角色不能修改自己角色
        tbl_user_role = mydb.query(TblUserRole).filter(TblUserRole.user_account == g.user_account).first()
        tbl_role = mydb.query(TblRole).filter(TblRole.role_code == tbl_user_role.role_code).first()
        if not tbl_role.is_admin:
            raise MyException(IS_NOT_ADMIN)

        # 获取修改用户的角色信息
        tbl_user_role = mydb.query(TblUserRole).filter(TblUserRole.user_account == request.user_account).first()
        tbl_user_role.role_code = request.role_code

        mydb.add(tbl_user_role)
        mydb.commit()

    @classmethod
    @login_require
    def menu_list(cls, request: MenuListRequest, response: MenuListResponse):
        """
        菜单列表
        """
        tbl_menu_list = mydb.query(TblMenu).all()

        response_list = []
        for tbl_menu in tbl_menu_list:
            response_list.append(tbl_menu.to_json())
        response.set_menu_list(response_list)

    @classmethod
    @login_require
    def menu_create(cls, request: MenuCreateRequest, response: MenuCreateResponse):
        """
        菜单创建
        """
        tbl_menu = TblMenu()
        tbl_menu.menu_name = request.menu_name
        tbl_menu.icon = request.icon
        tbl_menu.parent = request.parent_code

        mydb.add(tbl_menu)
        mydb.commit()
